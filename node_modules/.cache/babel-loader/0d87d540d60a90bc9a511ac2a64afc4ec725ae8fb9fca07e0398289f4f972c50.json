{"ast":null,"code":"/** hooks chapter : we will take user input */import{useEffect,useRef,useState}from\"react\";import{Dadar}from\"./Dadar\";import{OfficeLocation}from\"./OfficeLocation\";import{Rabale}from\"./Rabale\";import{initialArray}from\"../app/model/data\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";export function Learning(){const[companyStyle,setStyle]=useState({color:'green',backgroundColor:'yellow',width:'50%',textAlign:'center'});let[companyOffices,setOffice]=useState(['Mumbai','Dadar, Mumbai','Rabale, Mumbai','Parel, Mumbai']);let locationNode=useRef();let officeNode=useRef();let[offices,setOffices]=useState(()=>initialArray());/** no dependancy: \n    * after every rendering of component, useEffect hook gets called... *//*   useEffect(()=>{\n        console.log(\"this is setup in useEffect, u can do any code after component gets rendered\");\n        //afterrender();\n        return ()=>{\n            console.log(\"this is cleanup in useEffect\");\n            \n        }\n    });  *//** empty dependancy:\n     * useEffect will be called only on initial render of component, after \n     * that though components gets re rendered, useEfect will not get called\n     *//*      useEffect(()=>{\n        console.log(\"u can do any code after component gets rendered\");\n        //afterrender();\n       \n    }, []);  *//** dependancy:\n     * useEffect will be called on initial render of component, after \n     * that if components gets re rendered due to state change in depedancy mentioned in useEffect,\n     * then also useEfect will get called\n     */let l2=0;// normal variables gets reinitialized in every rerender\n// if we want to maintain the value internally across multiple renders, then we have to use\n// hook useRef\nlet l1=useRef(companyOffices.length);/*React.MutableRefObject<number> *///console.log(l1);\nuseEffect(()=>{console.log(\"setup... u can do any code after component gets rendered\");console.log(offices);/* console.log(l2);      \n        l2=companyOffices.length;\n        console.log(\"new length:\"+l2);\n        console.log(\"old length:\"+l1.current);\n        console.log(\"difference:\",l2-l1.current);*/return()=>{console.log(\"cleanup...\");/*  console.log(companyOffices);\n            l1.current=companyOffices.length;\n            console.log(\"old length:\"+l1.current); */};//afterrender();\n},[companyOffices,offices]);function afterrender(){console.log(\"more work to do\");}let companyName=\"Neosoft\";let joinLocation=\"rabale\";const liNodes=companyOffices.map((city,i)=>/*#__PURE__*/_jsx(\"li\",{children:city},'c'+i));let getMessage=function(){return\"hello we are implementing examples on JSX expression\";};let officeTemplate=offices.map((office,i)=>/*#__PURE__*/_jsx(OfficeLocation,{office:office},'co'+i));/* react props*/let styleClasses=['text-success','border','border-2','border-info'];function test(event){console.log(event.target);}function changeBackground(bgColor){setStyle({...companyStyle,backgroundColor:bgColor});}function addOffice(office){setOffice([...companyOffices,office]);}function filter(location){if(location==='all')setOffices(initialArray());else{let filters=offices.filter(office=>office.location.toLowerCase().includes(location.toLowerCase()));setOffices(filters);// [filers]\n}}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h5\",{style:companyStyle,onMouseOver:()=>changeBackground('lightblue'),onMouseOut:()=>changeBackground('yellow'),children:companyName}),\"  \",/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-info\",onClick:test,children:\"CLICK\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{style:{backgroundColor:\"pink\"},children:\"If then else\"}),joinLocation.toLowerCase()==='rabale'?/*#__PURE__*/_jsxs(\"address\",{children:[\"Sigma IT Park, \",/*#__PURE__*/_jsx(\"br\",{}),\"Unit No. 501, TTC Industrial Area, \",/*#__PURE__*/_jsx(\"br\",{}),\"Rabale, Navi Mumbai,  \",/*#__PURE__*/_jsx(\"br\",{}),\"Maharashtra 400701\"]}):/*#__PURE__*/_jsxs(\"address\",{children:[\"The Ruby Tower,  \",/*#__PURE__*/_jsx(\"br\",{}),\"Senapati Bapat Marg,  \",/*#__PURE__*/_jsx(\"br\",{}),\"Dadar West, Mumbai,  \",/*#__PURE__*/_jsx(\"br\",{}),\"Maharashtra 400028\"]})]}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-success border border-3\",children:\"if-then\"}),joinLocation.toLowerCase()==='rabale'&&/*#__PURE__*/_jsxs(\"address\",{children:[\"Sigma IT Park, \",/*#__PURE__*/_jsx(\"br\",{}),\"Unit No. 501, TTC Industrial Area, \",/*#__PURE__*/_jsx(\"br\",{}),\"Rabale, Navi Mumbai,  \",/*#__PURE__*/_jsx(\"br\",{}),\"Maharashtra 400701\"]})]}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsx(\"div\",{children:joinLocation.toLowerCase()==='dadar'&&/*#__PURE__*/_jsxs(\"address\",{children:[\"The Ruby Tower,  \",/*#__PURE__*/_jsx(\"br\",{}),\"Senapati Bapat Marg,  \",/*#__PURE__*/_jsx(\"br\",{}),\"Dadar West, Mumbai,  \",/*#__PURE__*/_jsx(\"br\",{}),\"Maharashtra 400028\"]})}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{children:\"If then else (template in component)\"}),joinLocation.toLowerCase()==='rabale'?/*#__PURE__*/_jsx(Rabale,{}):/*#__PURE__*/_jsx(Dadar,{})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"b\",{children:getMessage()}),/*#__PURE__*/_jsx(\"i\",{children:56*78})]}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsx(\"h4\",{className:styleClasses.join(\" \"),children:\"Company Offices\"}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"ol\",{children:liNodes})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"ol\",{children:companyOffices.map((city,i)=>/*#__PURE__*/_jsx(\"li\",{children:city},'o'+i))})}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",defaultValue:\"\",ref:locationNode}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>addOffice(locationNode.current.value),children:\"ADD NEW OFFICE\"}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsx(\"label\",{children:\"Enter location to filter:\"}),/*#__PURE__*/_jsxs(\"select\",{ref:officeNode,onChange:()=>filter(officeNode.current.value),children:[/*#__PURE__*/_jsx(\"option\",{children:\"all\"}),companyOffices.map((office,i)=>/*#__PURE__*/_jsx(\"option\",{children:office},'of'+i))]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setOffices(initialArray()),children:\"RESET\"}),/*#__PURE__*/_jsx(\"section\",{className:\"d-flex flex-wrap justify-content-between\",children:officeTemplate})]});}","map":{"version":3,"names":["useEffect","useRef","useState","Dadar","OfficeLocation","Rabale","initialArray","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Learning","companyStyle","setStyle","color","backgroundColor","width","textAlign","companyOffices","setOffice","locationNode","officeNode","offices","setOffices","l2","l1","length","console","log","afterrender","companyName","joinLocation","liNodes","map","city","i","children","getMessage","officeTemplate","office","styleClasses","test","event","target","changeBackground","bgColor","addOffice","filter","location","filters","toLowerCase","includes","style","onMouseOver","onMouseOut","className","onClick","join","type","defaultValue","ref","current","value","onChange"],"sources":["/home/neosoft/Desktop/react-ems3/src/components/Learning.js"],"sourcesContent":["/** hooks chapter : we will take user input */\n\nimport { useEffect, useRef, useState } from \"react\";\nimport { Dadar } from \"./Dadar\";\nimport { OfficeLocation } from \"./OfficeLocation\";\nimport { Rabale } from \"./Rabale\";\nimport { initialArray } from \"../app/model/data\";\n\nexport function Learning(){\n\n   const [companyStyle, setStyle] =useState({\n        color:'green',\n        backgroundColor :'yellow',\n        width:'50%',\n        textAlign:'center'\n    });\n    let [companyOffices, setOffice]=useState(['Mumbai','Dadar, Mumbai', 'Rabale, Mumbai', 'Parel, Mumbai'])\n\n    let locationNode=useRef();\n    let officeNode=useRef();\n    let [offices, setOffices]= useState(()=>initialArray());\n \n   /** no dependancy: \n    * after every rendering of component, useEffect hook gets called... */\n /*   useEffect(()=>{\n        console.log(\"this is setup in useEffect, u can do any code after component gets rendered\");\n        //afterrender();\n        return ()=>{\n            console.log(\"this is cleanup in useEffect\");\n            \n        }\n    });  */\n    /** empty dependancy:\n     * useEffect will be called only on initial render of component, after \n     * that though components gets re rendered, useEfect will not get called\n     */\n/*      useEffect(()=>{\n        console.log(\"u can do any code after component gets rendered\");\n        //afterrender();\n       \n    }, []);  */\n    /** dependancy:\n     * useEffect will be called on initial render of component, after \n     * that if components gets re rendered due to state change in depedancy mentioned in useEffect,\n     * then also useEfect will get called\n     */\n    let l2=0; // normal variables gets reinitialized in every rerender\n    // if we want to maintain the value internally across multiple renders, then we have to use\n    // hook useRef\n    let l1=useRef(companyOffices.length); /*React.MutableRefObject<number> */\n    //console.log(l1);\n   useEffect(()=>{\n        console.log(\"setup... u can do any code after component gets rendered\");\n        console.log(offices);\n\n        /* console.log(l2);      \n        l2=companyOffices.length;\n        console.log(\"new length:\"+l2);\n        console.log(\"old length:\"+l1.current);\n        console.log(\"difference:\",l2-l1.current);*/\n        return ()=>{\n            console.log(\"cleanup...\");\n           /*  console.log(companyOffices);\n            l1.current=companyOffices.length;\n            console.log(\"old length:\"+l1.current); */\n           \n        } \n        //afterrender();\n    }, [companyOffices, offices]);\n    function afterrender(){\n        console.log(\"more work to do\");\n    }\n    let companyName=\"Neosoft\"\n    let joinLocation=\"rabale\";\n\n    const liNodes=companyOffices.map((city,i)=><li key={'c'+i}>{city}</li>)\n    \n    let getMessage=function(){\n        return \"hello we are implementing examples on JSX expression\"\n    }\n    \n   \n    let officeTemplate=offices\n    .map((office, i)=><OfficeLocation  key={'co'+i} office={office}></OfficeLocation>) /* react props*/\n\n    let styleClasses=['text-success', 'border','border-2', 'border-info'];\n\n    function test(event){\n        console.log(event.target);\n    }\n    function changeBackground(bgColor){\n        setStyle({...companyStyle, backgroundColor:bgColor})\n    }\n    function addOffice(office){\n        setOffice([...companyOffices, office])\n    }\n    function filter(location){\n        if(location==='all')\n            setOffices(initialArray())\n        else{\n        let filters=offices.filter((office)=>office.location.toLowerCase().includes(location.toLowerCase()))\n        setOffices(filters); // [filers]\n        }\n    }\n    return (\n        <>\n            <h5 style={companyStyle} onMouseOver={()=>changeBackground('lightblue')}\n                onMouseOut={()=>changeBackground('yellow') }>{companyName}</h5>  {/* JSX expression*/} \n            <button className=\"btn btn-info\" onClick={test}>CLICK</button>\n            <div>\n                <h4 style={{backgroundColor:\"pink\"}}>If then else</h4>\n                {\n                 joinLocation.toLowerCase()==='rabale'?  \n                 <address> \n                    Sigma IT Park, <br />\n                     Unit No. 501, TTC Industrial Area, <br />\n                    Rabale, Navi Mumbai,  <br />\n                    Maharashtra 400701 \n                 </address> : \n                 <address>\n                    The Ruby Tower,  <br />\n                    Senapati Bapat Marg,  <br />\n                    Dadar West, Mumbai,  <br />\n                    Maharashtra 400028\n                 </address>\n                }\n            </div>\n            <hr></hr>\n            <div>\n                <h4 className=\"text-success border border-3\">if-then</h4>\n                {joinLocation.toLowerCase()==='rabale' && \n                <address> \n                Sigma IT Park, <br />\n                 Unit No. 501, TTC Industrial Area, <br />\n                Rabale, Navi Mumbai,  <br />\n                Maharashtra 400701 \n                </address> }\n            </div>\n            <hr></hr>\n            <div>\n                {joinLocation.toLowerCase()==='dadar' && \n                <address>\n                The Ruby Tower,  <br />\n                Senapati Bapat Marg,  <br />\n                Dadar West, Mumbai,  <br />\n                Maharashtra 400028\n                </address> }\n            </div>\n            <hr></hr>\n            <div>\n            <h4>If then else (template in component)</h4>\n                {\n                 joinLocation.toLowerCase()==='rabale'?<Rabale></Rabale>:<Dadar></Dadar>\n                }\n            </div>\n            <div>\n                <b>{getMessage()}</b>\n                <i>{56*78}</i>\n            </div>\n            <hr></hr>\n            <h4 className={styleClasses.join(\" \")}>Company Offices</h4>\n            <div>\n                <ol>\n                    {liNodes}\n                </ol>\n            </div>\n            <div>\n                <ol>\n                    {companyOffices.map((city, i)=><li key={'o'+i}>{city}</li>)}\n                </ol>\n            </div>\n           {  /* uncontrolled*/ }\n            <input type=\"text\" defaultValue=\"\" ref={locationNode}></input>\n            <button onClick={()=>addOffice(locationNode.current.value)}>ADD NEW OFFICE</button>\n            <hr></hr>\n            <label>Enter location to filter:</label>\n            <select ref={officeNode} onChange={()=>filter(officeNode.current.value)}>\n                <option>all</option>\n                {companyOffices.map((office, i)=><option key={'of'+i}>{office}</option>)}\n            </select>\n            <button onClick={()=>setOffices(initialArray())}>RESET</button>\n            <section className=\"d-flex flex-wrap justify-content-between\">\n                {officeTemplate}\n            </section>\n        </>\n    );\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}